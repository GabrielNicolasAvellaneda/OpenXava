<?xml version="1.0" encoding="ISO-8859-1"?>
#declare import="org.openxava.component.MetaComponent"#
#declare import="org.openxava.generators.Generators"#
#declare import="org.openxava.util.*"#
#declare import="org.openxava.model.meta.*"#
#declare import="org.openxava.mapping.*"#

<!-- Generated by OpenXava: #(new Date())# -->
# 
String componentName = properties.getProperty("arg3");
String aggregateName = properties.getProperty("arg4");
MetaComponent component = MetaComponent.get(componentName);
ModelMapping mapping = null;
if (aggregateName == null) {
	mapping = component.getEntityMapping();	
}
else {
	mapping = component.getAggregateMapping(aggregateName);	
}
String tableId = Strings.change(mapping.getTable(), ".", "_");
String table = mapping.getUnqualifiedTable();
String schema = mapping.getSchema();
String pk = table + "PK";
String pkMembers = mapping.getKeyColumnsAsString();
if (schema == null) {
	throw new XavaException("websphere_schema_required", componentName);
}
# 

<RDBSchema:RDBTable xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:RDBSchema="RDBSchema.xmi" xmi:id="#(tableId)#" name="#(table)#" primaryKey="#(pk)#">
  <database href="META-INF/backends/OPENXAVA/DB.dbxmi##DB"/>
  <schema href="META-INF/backends/OPENXAVA/#(schema)#.schxmi###(schema)#"/>
# 
for (Iterator it=mapping.getCmpFields().iterator(); it.hasNext();) {
	CmpField field = (CmpField) it.next();
	String cmpTypeName = field.getCmpTypeName();
	if (Is.emptyString(cmpTypeName)) {
		throw new XavaException("unknow_type", field.getCmpPropertyName(), mapping.getModelName());
	}
	String type = Generators.getWebsphereSQLType(cmpTypeName, false);
	String href = Generators.getWebsphereSQLType(cmpTypeName, true);
# 
  <columns xmi:type="RDBSchema:RDBColumn" xmi:id="#(field.getColumn())#" name="#(field.getColumn())#">
    <type xmi:type="#(type)#" xmi:id="#(type)#_#(field)#">
      <originatingType xmi:type="#(type)#" href="#(href)#"/>
    </type>
  </columns>
# 
}
# 
  <namedGroup xmi:type="RDBSchema:SQLReference" xmi:id="#(pk)#" name="#(pk)#" members="#(pkMembers)#" constraint="SQLConstraint_#(pk)#"/>
  <constraints xmi:id="SQLConstraint_#(pk)#" name="#(pk)#" type="PRIMARYKEY" primaryKey="#(pk)#"/>
</RDBSchema:RDBTable>
