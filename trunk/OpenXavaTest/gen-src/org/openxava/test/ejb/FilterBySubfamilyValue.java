/*
 * Generated by XDoclet - Do not edit!
 */
package org.openxava.test.ejb;

/**
 * Value object for FilterBySubfamily.
 *
 */
public class FilterBySubfamilyValue
   extends java.lang.Object
   implements java.io.Serializable 
{
   private java.lang.String oid;
   private boolean oidHasBeenSet = false;
   private int subfamily_number;
   private boolean subfamily_numberHasBeenSet = false;

   // private org.openxava.test.ejb.FilterBySubfamilyKey pk;

   public FilterBySubfamilyValue()
   {
	 // pk = new org.openxava.test.ejb.FilterBySubfamilyKey();
   }

   /*
   public FilterBySubfamilyValue(org.openxava.test.ejb.FilterBySubfamilyKey pk)
   {
	  this.pk = pk;
   }
   */

   /*
   public FilterBySubfamilyValue( java.lang.String oid,int subfamily_number )
   {
	  this.oid = oid;
	  oidHasBeenSet = true;
	  this.subfamily_number = subfamily_number;
	  subfamily_numberHasBeenSet = true;
	  //pk = new org.openxava.test.ejb.FilterBySubfamilyKey(this.getOid());
   }
   */

   //TODO Cloneable is better than this !
   public FilterBySubfamilyValue( FilterBySubfamilyValue otherValue )
   {
	  this.oid = otherValue.oid;
	  oidHasBeenSet = true;
	  this.subfamily_number = otherValue.subfamily_number;
	  subfamily_numberHasBeenSet = true;

	  // pk = new org.openxava.test.ejb.FilterBySubfamilyKey(this.getOid());
   }

   /*
   public org.openxava.test.ejb.FilterBySubfamilyKey getPrimaryKey()
   {
	  return pk;
   }

   public void setPrimaryKey( org.openxava.test.ejb.FilterBySubfamilyKey pk )
   {
      // it's also nice to update PK object - just in case
      // somebody would ask for it later...
      this.pk = pk;
	  setOid( pk.oid );
   }
   */

   public java.lang.String getOid()
   {
	  return this.oid;
   }

   public void setOid( java.lang.String oid )
   {
	  this.oid = oid;
	  oidHasBeenSet = true;

		 //pk.setOid(oid);
   }

   public boolean oidHasBeenSet(){
	  return oidHasBeenSet;
   }
   public int getSubfamily_number()
   {
	  return this.subfamily_number;
   }

   public void setSubfamily_number( int subfamily_number )
   {
	  this.subfamily_number = subfamily_number;
	  subfamily_numberHasBeenSet = true;

   }

   public boolean subfamily_numberHasBeenSet(){
	  return subfamily_numberHasBeenSet;
   }

   public String toString()
   {
	  StringBuffer str = new StringBuffer("{");

	  str.append("oid=" + getOid() + " " + "subfamily_number=" + getSubfamily_number());
	  str.append('}');

	  return(str.toString());
   }

   /**
    * A Value Object has an identity if the attributes making its Primary Key have all been set. An object without identity is never equal to any other object.
    *
    * @return true if this instance has an identity.
    */
   protected boolean hasIdentity()
   {
	  boolean ret = true;
	  ret = ret && oidHasBeenSet;
	  return ret;
   }

   public boolean equals(Object other)
   {
      if (this == other)
         return true;
	  if ( ! hasIdentity() ) return false;
	  if (other instanceof FilterBySubfamilyValue)
	  {
		 FilterBySubfamilyValue that = (FilterBySubfamilyValue) other;
		 if ( ! that.hasIdentity() ) return false;
		 boolean lEquals = true;
		 if( this.oid == null )
		 {
			lEquals = lEquals && ( that.oid == null );
		 }
		 else
		 {
			lEquals = lEquals && this.oid.equals( that.oid );
		 }

		 lEquals = lEquals && isIdentical(that);

		 return lEquals;
	  }
	  else
	  {
		 return false;
	  }
   }

   public boolean isIdentical(Object other)
   {
	  if (other instanceof FilterBySubfamilyValue)
	  {
		 FilterBySubfamilyValue that = (FilterBySubfamilyValue) other;
		 boolean lEquals = true;
		 lEquals = lEquals && this.subfamily_number == that.subfamily_number;

		 return lEquals;
	  }
	  else
	  {
		 return false;
	  }
   }

   public int hashCode(){
	  int result = 17;
      result = 37*result + ((this.oid != null) ? this.oid.hashCode() : 0);

      result = 37*result + (int) subfamily_number;

	  return result;
   }

}
