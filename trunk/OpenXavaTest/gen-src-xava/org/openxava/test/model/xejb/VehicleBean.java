
// File generated by OpenXava: Tue Aug 12 19:44:03 CEST 2008
// Archivo generado por OpenXava: Tue Aug 12 19:44:03 CEST 2008

// WARNING: NO EDIT
// OJO: NO EDITAR
// Component: Vehicle		Entity/Entidad

package org.openxava.test.model.xejb;

import java.util.*;
import java.math.*;
import javax.ejb.*;
import javax.rmi.PortableRemoteObject;

import org.openxava.ejbx.*;
import org.openxava.util.*;
import org.openxava.component.*;
import org.openxava.model.meta.*;
import org.openxava.validators.ValidationException;

import org.openxava.test.model.*;


/**
 * @ejb:bean name="Vehicle" type="CMP" jndi-name="@subcontext@/ejb/org.openxava.test.model/Vehicle" reentrant="false" view-type="remote"
 * @ejb:interface extends="org.openxava.ejbx.EJBReplicable, org.openxava.test.model.IVehicle"
 * @ejb:data-object extends="java.lang.Object"
 * @ejb:home extends="javax.ejb.EJBHome"
 * @ejb:pk extends="java.lang.Object"
 *
 * @ejb.value-object name="Vehicle" match="persistentCalculatedAndAggregate"
 *   
 * @ejb:env-entry name="DATA_SOURCE" type="java.lang.String" value="jdbc/DataSource"
 * @ejb:resource-ref  res-name="jdbc/DataSource" res-type="javax.sql.DataSource"  res-auth="Container" jndi-name="jdbc/@datasource@"
 * @jboss:resource-ref  res-ref-name="jdbc/DataSource" resource-name="jdbc/DataSource"
 * 	
 * @ejb:finder signature="Vehicle findByOid(java.lang.String oid)" query="SELECT OBJECT(o) FROM Vehicle o WHERE o.oid = ?1" view-type="remote" result-type-mapping="Remote"
 * @jboss:query signature="Vehicle findByOid(java.lang.String oid)" query="SELECT OBJECT(o) FROM Vehicle o WHERE o.oid = ?1" 
 * 
 * @jboss:table-name "XAVATEST.VEHICLE"
 *
 * @author Javier Paniza
 */
abstract public class VehicleBean extends EJBReplicableBase 
			implements org.openxava.test.model.IVehicle, EntityBean {	
			
	private boolean creating = false;		
	private boolean modified = false;

	// Create 

	/**
	 * @ejb:create-method
	 */	 
	public org.openxava.test.model.VehicleKey ejbCreate(Map values) 
		throws
			CreateException,
			ValidationException {
		initMembers();	
		creating = true;	
		modified = false;
		executeSets(values); 
			
		return null;
	} 
	public void ejbPostCreate(Map values) 
		throws
			CreateException,
			ValidationException { 
	} 
	
	/**
	 * @ejb:create-method
	 */	 
	public org.openxava.test.model.VehicleKey ejbCreate(org.openxava.test.model.VehicleData data) 
		throws
			CreateException,
			ValidationException {
		initMembers();	
		creating = true;	
		modified = false;
		setData(data); 
		setOid(data.getOid()); 
			
		return null;
	} 
	public void ejbPostCreate(org.openxava.test.model.VehicleData data) 
		throws
			CreateException,
			ValidationException { 			
	}
	
	
	/**
	 * @ejb:create-method
	 */	 
	public org.openxava.test.model.VehicleKey ejbCreate(org.openxava.test.model.VehicleValue value) 
		throws
			CreateException,
			ValidationException {
		initMembers();	
		creating = true;	
		modified = false;
		setVehicleValue(value); 
		setOid(value.getOid()); 
			
		return null;
	} 
	public void ejbPostCreate(org.openxava.test.model.VehicleValue value) 
		throws
			CreateException,
			ValidationException { 			
	}
	
	public void ejbLoad() {
		creating = false;
		modified = false; 
	}
	
	public void ejbStore() {
		if (creating) {
			creating = false;
			return;
		}
		if (!modified) return; 
		
		modified = false;
	} 	
	

	public void ejbRemove() throws RemoveException { 						
	} 	
	
	// Properties/Propiedades 
	private static org.openxava.converters.IConverter modelConverter;
	private org.openxava.converters.IConverter getModelConverter() {
		if (modelConverter == null) {
			try {
				modelConverter = (org.openxava.converters.IConverter) 
					getMetaModel().getMapping().getConverter("model");
			}
			catch (Exception ex) {
				ex.printStackTrace();
				throw new EJBException(XavaResources.getString("generator.create_converter_error", "model"));
			}
			
		}	
		return modelConverter;
	} 
	/**	 
	 * @ejb:persistent-field
	 * 
	 * @jboss:column-name "MODEL"
	 */
	public abstract java.lang.String get_Model();
	public abstract void set_Model(java.lang.String newModel); 	
	
	/**
	 * @ejb.value-object match="persistentCalculatedAndAggregate"
	 * @ejb:interface-method
	 */
	public String getModel() {
		try {
			return (String) getModelConverter().toJava(get_Model());
		}
		catch (org.openxava.converters.ConversionException ex) {
			ex.printStackTrace();
			throw new EJBException(XavaResources.getString("generator.conversion_error", "Model", "Vehicle", "String"));
		}
	}
	
	/**
	 * @ejb:interface-method
	 */
	public void setModel(String newModel) {
		try { 
			this.modified = true; 
			set_Model((java.lang.String) getModelConverter().toDB(newModel));
		}
		catch (org.openxava.converters.ConversionException ex) {
			ex.printStackTrace();
			throw new EJBException(XavaResources.getString("generator.conversion_error", "Model", "Vehicle", "String"));
		}		
	} 
	/**
	 * @ejb:interface-method
	 * @ejb:persistent-field
	 * @ejb:pk-field
	 * @ejb.value-object match="persistentCalculatedAndAggregate"
	 *
	 * @jboss:column-name "OID"
	 */
	public abstract String getOid();
	/**
	  * 
	  */
	public abstract void setOid(String newOid); 
	private static org.openxava.converters.IConverter codeConverter;
	private org.openxava.converters.IConverter getCodeConverter() {
		if (codeConverter == null) {
			try {
				codeConverter = (org.openxava.converters.IConverter) 
					getMetaModel().getMapping().getConverter("code");
			}
			catch (Exception ex) {
				ex.printStackTrace();
				throw new EJBException(XavaResources.getString("generator.create_converter_error", "code"));
			}
			
		}	
		return codeConverter;
	} 
	/**	 
	 * @ejb:persistent-field
	 * 
	 * @jboss:column-name "CODE"
	 */
	public abstract java.lang.String get_Code();
	public abstract void set_Code(java.lang.String newCode); 	
	
	/**
	 * @ejb.value-object match="persistentCalculatedAndAggregate"
	 * @ejb:interface-method
	 */
	public String getCode() {
		try {
			return (String) getCodeConverter().toJava(get_Code());
		}
		catch (org.openxava.converters.ConversionException ex) {
			ex.printStackTrace();
			throw new EJBException(XavaResources.getString("generator.conversion_error", "Code", "Vehicle", "String"));
		}
	}
	
	/**
	 * @ejb:interface-method
	 */
	public void setCode(String newCode) {
		try { 
			this.modified = true; 
			set_Code((java.lang.String) getCodeConverter().toDB(newCode));
		}
		catch (org.openxava.converters.ConversionException ex) {
			ex.printStackTrace();
			throw new EJBException(XavaResources.getString("generator.conversion_error", "Code", "Vehicle", "String"));
		}		
	} 
	private static org.openxava.converters.IConverter makeConverter;
	private org.openxava.converters.IConverter getMakeConverter() {
		if (makeConverter == null) {
			try {
				makeConverter = (org.openxava.converters.IConverter) 
					getMetaModel().getMapping().getConverter("make");
			}
			catch (Exception ex) {
				ex.printStackTrace();
				throw new EJBException(XavaResources.getString("generator.create_converter_error", "make"));
			}
			
		}	
		return makeConverter;
	} 
	/**	 
	 * @ejb:persistent-field
	 * 
	 * @jboss:column-name "MAKE"
	 */
	public abstract java.lang.String get_Make();
	public abstract void set_Make(java.lang.String newMake); 	
	
	/**
	 * @ejb.value-object match="persistentCalculatedAndAggregate"
	 * @ejb:interface-method
	 */
	public String getMake() {
		try {
			return (String) getMakeConverter().toJava(get_Make());
		}
		catch (org.openxava.converters.ConversionException ex) {
			ex.printStackTrace();
			throw new EJBException(XavaResources.getString("generator.conversion_error", "Make", "Vehicle", "String"));
		}
	}
	
	/**
	 * @ejb:interface-method
	 */
	public void setMake(String newMake) {
		try { 
			this.modified = true; 
			set_Make((java.lang.String) getMakeConverter().toDB(newMake));
		}
		catch (org.openxava.converters.ConversionException ex) {
			ex.printStackTrace();
			throw new EJBException(XavaResources.getString("generator.conversion_error", "Make", "Vehicle", "String"));
		}		
	} 

	// Colecciones/Collections		

	// References/Referencias 

	// Methods/Metodos 

	private static MetaModel metaModel;
	public MetaModel getMetaModel() throws XavaException {
		if (metaModel == null) {
			metaModel = MetaComponent.get("Vehicle").getMetaEntity(); 	
		}
		return metaModel;
	}
	
	
	/**
	 * @ejb:interface-method
	 */	
	public abstract org.openxava.test.model.VehicleData getData();		
	
	/**
	 * @ejb:interface-method
	 */		
	public abstract void setData(org.openxava.test.model.VehicleData data);
	
	/**
	 * @ejb:interface-method
	 */	
	public abstract org.openxava.test.model.VehicleValue getVehicleValue();		
	
	/**
	 * @ejb:interface-method
	 */		
	public abstract void setVehicleValue(org.openxava.test.model.VehicleValue value);
	
	public void setEntityContext(javax.ejb.EntityContext ctx) {
		super.setEntityContext(ctx);
	}
	public void unsetEntityContext() {
		super.unsetEntityContext();
	} 

	private void initMembers() { 
		setOid(null); 
		setCode(null); 
		setModel(null); 
		setMake(null); 	
	} 		
}