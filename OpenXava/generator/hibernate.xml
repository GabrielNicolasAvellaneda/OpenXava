<?xml version="1.0"?>
<tl>&lt;?xml version="1.0" encoding="ISO-8859-1"?&gt;
<declare import="org.openxava.component.MetaComponent"/>
<declare import="org.openxava.model.meta.*"/>
<declare import="org.openxava.mapping.*"/>
<declare import="org.openxava.util.Strings"/>

&lt;!-- Generated by OpenXava: <expr>new Date()</expr> --&gt;
<java>
String packageName = properties.getProperty("arg3");
String componentName = properties.getProperty("arg4");
String aggregateName = properties.getProperty("arg5");
MetaComponent component = MetaComponent.get(componentName);

String name=null;
IMetaModel metaModel=null;
if (aggregateName == null) {
	name=componentName;	
	metaModel = (IMetaModel) component.getMetaEntity();
}
else {
	name=aggregateName;	
	metaModel =  (IMetaEjb)component.getMetaAggregate(aggregateName);
}
ModelMapping mapping = metaModel.getMapping();
</java>

&lt;!DOCTYPE hibernate-mapping SYSTEM "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd"&gt;

&lt;hibernate-mapping package="<expr>packageName</expr>"&gt;

  &lt;class 
  	name="<expr>name</expr>"
  	table="<expr>mapping.getTable()</expr>"&gt;
  	
<java>
Collection keyProperties = metaModel.getMetaPropertiesKey(); 
if (keyProperties.size() == 1) {
	MetaProperty key = (MetaProperty) keyProperties.iterator().next();
	PropertyMapping pMapping = key.getMapping();
	String propertyName = pMapping.hasConverter()?"_"+Strings.firstUpper(key.getName()):key.getName();	
</java> 	
		&lt;id name="<expr>propertyName</expr>" column="<expr>pMapping.getColumn()</expr>"&gt;
			&lt;generator class="assigned"/&gt;
		&lt;/id&gt;
<java>
}
else {
</java> 
		&lt;composite-id&gt;
<java>
	for (Iterator it = keyProperties.iterator(); it.hasNext();) {
		MetaProperty key = (MetaProperty) it.next();
		PropertyMapping pMapping = key.getMapping();
		String propertyName = pMapping.hasConverter()?"_"+Strings.firstUpper(key.getName()):key.getName();			
</java> 	
			&lt;key-property name="<expr>propertyName</expr>" column="<expr>pMapping.getColumn()</expr>"/&gt;
<java>	
	}
</java>  	
		&lt;/composite-id&gt;
<java>		
}

	Collection properties = metaModel.getMetaPropertiesPersistents();
	for (Iterator it = properties.iterator(); it.hasNext();) {
		MetaProperty prop = (MetaProperty) it.next();
		PropertyMapping pMapping = prop.getMapping();
		String propertyName = pMapping.hasConverter()?"_"+Strings.firstUpper(prop.getName()):prop.getName();			
		if (!prop.isKey()) {
</java> 	
		&lt;property name="<expr>propertyName</expr>" column="<expr>pMapping.getColumn()</expr>"/&gt;
<java>	
		} 
	}
</java>   
		
  &lt;/class&gt;

&lt;/hibernate-mapping&gt;

</tl>