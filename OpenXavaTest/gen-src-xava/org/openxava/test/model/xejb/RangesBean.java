
// File generated by OpenXava: Wed Aug 26 12:46:57 CEST 2009
// Archivo generado por OpenXava: Wed Aug 26 12:46:57 CEST 2009

// WARNING: NO EDIT
// OJO: NO EDITAR
// Component: Ranges		Entity/Entidad

package org.openxava.test.model.xejb;

import java.util.*;
import java.math.*;
import javax.ejb.*;
import javax.rmi.PortableRemoteObject;

import org.openxava.ejbx.*;
import org.openxava.util.*;
import org.openxava.component.*;
import org.openxava.model.meta.*;
import org.openxava.validators.ValidationException;

import org.openxava.test.model.*;


/**
 * @ejb:bean name="Ranges" type="CMP" jndi-name="@subcontext@/ejb/org.openxava.test.model/Ranges" reentrant="false" view-type="remote"
 * @ejb:interface extends="org.openxava.ejbx.EJBReplicable, org.openxava.test.model.IRanges"
 * @ejb:data-object extends="java.lang.Object"
 * @ejb:home extends="javax.ejb.EJBHome"
 * @ejb:pk extends="java.lang.Object"
 *
 * @ejb.value-object name="Ranges" match="persistentCalculatedAndAggregate"
 *   
 * @ejb:env-entry name="DATA_SOURCE" type="java.lang.String" value="jdbc/DataSource"
 * @ejb:resource-ref  res-name="jdbc/DataSource" res-type="javax.sql.DataSource"  res-auth="Container" jndi-name="jdbc/@datasource@"
 * @jboss:resource-ref  res-ref-name="jdbc/DataSource" resource-name="jdbc/DataSource"
 * 	
 * @ejb:finder signature="Ranges findByOid(java.lang.String oid)" query="SELECT OBJECT(o) FROM Ranges o WHERE o.oid = ?1" view-type="remote" result-type-mapping="Remote"
 * @jboss:query signature="Ranges findByOid(java.lang.String oid)" query="SELECT OBJECT(o) FROM Ranges o WHERE o.oid = ?1" 
 * 
 * @jboss:table-name "XAVATEST.RANGES"
 *
 * @author Javier Paniza
 */
abstract public class RangesBean extends EJBReplicableBase 
			implements org.openxava.test.model.IRanges, EntityBean {	
			
	private boolean creating = false;		
	private boolean modified = false;

	// Create 

	/**
	 * @ejb:create-method
	 */	 
	public org.openxava.test.model.RangesKey ejbCreate(Map values) 
		throws
			CreateException,
			ValidationException {
		initMembers();	
		creating = true;	
		modified = false;
		executeSets(values); 
		try { 	
			org.openxava.calculators.UUIDCalculator oidCalculator = (org.openxava.calculators.UUIDCalculator)
				getMetaModel().getMetaProperty("oid").getMetaCalculatorDefaultValue().createCalculator(); 
			oidCalculator.setModel(this); 
			setOid((String) oidCalculator.calculate()); 
		}
		catch (Exception ex) {
			ex.printStackTrace();
			throw new EJBException(XavaResources.getString("entity_create_error", "Ranges", ex.getLocalizedMessage()));
		} 
			
		return null;
	} 
	public void ejbPostCreate(Map values) 
		throws
			CreateException,
			ValidationException { 
	} 
	
	/**
	 * @ejb:create-method
	 */	 
	public org.openxava.test.model.RangesKey ejbCreate(org.openxava.test.model.RangesData data) 
		throws
			CreateException,
			ValidationException {
		initMembers();	
		creating = true;	
		modified = false;
		setData(data); 
		setOid(data.getOid()); 
		try { 	
			org.openxava.calculators.UUIDCalculator oidCalculator= (org.openxava.calculators.UUIDCalculator)
				getMetaModel().getMetaProperty("oid").getMetaCalculatorDefaultValue().createCalculator(); 
			oidCalculator.setModel(this); 
			setOid((String) oidCalculator.calculate()); 
		}
		catch (Exception ex) {
			ex.printStackTrace();
			throw new EJBException(XavaResources.getString("entity_create_error", "Ranges", ex.getLocalizedMessage()));
		} 
			
		return null;
	} 
	public void ejbPostCreate(org.openxava.test.model.RangesData data) 
		throws
			CreateException,
			ValidationException { 			
	}
	
	
	/**
	 * @ejb:create-method
	 */	 
	public org.openxava.test.model.RangesKey ejbCreate(org.openxava.test.model.RangesValue value) 
		throws
			CreateException,
			ValidationException {
		initMembers();	
		creating = true;	
		modified = false;
		setRangesValue(value); 
		setOid(value.getOid()); 
		try { 	
			org.openxava.calculators.UUIDCalculator oidCalculator = (org.openxava.calculators.UUIDCalculator)
				getMetaModel().getMetaProperty("oid").getMetaCalculatorDefaultValue().createCalculator(); 
			oidCalculator.setModel(this); 
			setOid((String) oidCalculator.calculate()); 
		}
		catch (Exception ex) {
			ex.printStackTrace();
			throw new EJBException(XavaResources.getString("entity_create_error", "Ranges", ex.getLocalizedMessage()));
		} 
			
		return null;
	} 
	public void ejbPostCreate(org.openxava.test.model.RangesValue value) 
		throws
			CreateException,
			ValidationException { 			
	}
	
	public void ejbLoad() {
		creating = false;
		modified = false; 
	}
	
	public void ejbStore() {
		if (creating) {
			creating = false;
			return;
		}
		if (!modified) return; 
		
		modified = false;
	} 	
	

	public void ejbRemove() throws RemoveException { 						
	} 	
	
	// Properties/Propiedades 
	private static org.openxava.converters.IConverter numberFromConverter;
	private org.openxava.converters.IConverter getNumberFromConverter() {
		if (numberFromConverter == null) {
			try {
				numberFromConverter = (org.openxava.converters.IConverter) 
					getMetaModel().getMapping().getConverter("numberFrom");
			}
			catch (Exception ex) {
				ex.printStackTrace();
				throw new EJBException(XavaResources.getString("generator.create_converter_error", "numberFrom"));
			}
			
		}	
		return numberFromConverter;
	} 
	/**	 
	 * @ejb:persistent-field
	 * 
	 * @jboss:column-name "NUMBERFROM"
	 */
	public abstract java.lang.Integer get_NumberFrom();
	public abstract void set_NumberFrom(java.lang.Integer newNumberFrom); 	
	
	/**
	 * @ejb.value-object match="persistentCalculatedAndAggregate"
	 * @ejb:interface-method
	 */
	public int getNumberFrom() {
		try {
			return ((Integer) getNumberFromConverter().toJava(get_NumberFrom())).intValue();
		}
		catch (org.openxava.converters.ConversionException ex) {
			ex.printStackTrace();
			throw new EJBException(XavaResources.getString("generator.conversion_error", "NumberFrom", "Ranges", "int"));
		}
	}
	
	/**
	 * @ejb:interface-method
	 */
	public void setNumberFrom(int newNumberFrom) {
		try { 
			this.modified = true; 
			set_NumberFrom((java.lang.Integer) getNumberFromConverter().toDB(new Integer(newNumberFrom)));
		}
		catch (org.openxava.converters.ConversionException ex) {
			ex.printStackTrace();
			throw new EJBException(XavaResources.getString("generator.conversion_error", "NumberFrom", "Ranges", "int"));
		}		
	} 
	private static org.openxava.converters.IConverter typeConverter;
	private org.openxava.converters.IConverter getTypeConverter() {
		if (typeConverter == null) {
			try {
				typeConverter = (org.openxava.converters.IConverter) 
					getMetaModel().getMapping().getConverter("type");
			}
			catch (Exception ex) {
				ex.printStackTrace();
				throw new EJBException(XavaResources.getString("generator.create_converter_error", "type"));
			}
			
		}	
		return typeConverter;
	} 
	/**	 
	 * @ejb:persistent-field
	 * 
	 * @jboss:column-name "TYPE"
	 */
	public abstract java.lang.Integer get_Type();
	public abstract void set_Type(java.lang.Integer newType); 	
	
	/**
	 * @ejb.value-object match="persistentCalculatedAndAggregate"
	 * @ejb:interface-method
	 */
	public int getType() {
		try {
			return ((Integer) getTypeConverter().toJava(get_Type())).intValue();
		}
		catch (org.openxava.converters.ConversionException ex) {
			ex.printStackTrace();
			throw new EJBException(XavaResources.getString("generator.conversion_error", "Type", "Ranges", "int"));
		}
	}
	
	/**
	 * @ejb:interface-method
	 */
	public void setType(int newType) {
		try { 
			this.modified = true; 
			set_Type((java.lang.Integer) getTypeConverter().toDB(new Integer(newType)));
		}
		catch (org.openxava.converters.ConversionException ex) {
			ex.printStackTrace();
			throw new EJBException(XavaResources.getString("generator.conversion_error", "Type", "Ranges", "int"));
		}		
	} 
	/**
	 * @ejb:interface-method
	 * @ejb:persistent-field
	 * @ejb:pk-field
	 * @ejb.value-object match="persistentCalculatedAndAggregate"
	 *
	 * @jboss:column-name "OID"
	 */
	public abstract String getOid();
	/**
	  * 
	  */
	public abstract void setOid(String newOid); 
	private static org.openxava.converters.IConverter dateFromConverter;
	private org.openxava.converters.IConverter getDateFromConverter() {
		if (dateFromConverter == null) {
			try {
				dateFromConverter = (org.openxava.converters.IConverter) 
					getMetaModel().getMapping().getConverter("dateFrom");
			}
			catch (Exception ex) {
				ex.printStackTrace();
				throw new EJBException(XavaResources.getString("generator.create_converter_error", "dateFrom"));
			}
			
		}	
		return dateFromConverter;
	} 
	/**	 
	 * @ejb:persistent-field
	 * 
	 * @jboss:column-name "DATEFROM"
	 */
	public abstract java.sql.Date get_DateFrom();
	public abstract void set_DateFrom(java.sql.Date newDateFrom); 	
	
	/**
	 * @ejb.value-object match="persistentCalculatedAndAggregate"
	 * @ejb:interface-method
	 */
	public java.util.Date getDateFrom() {
		try {
			return (java.util.Date) getDateFromConverter().toJava(get_DateFrom());
		}
		catch (org.openxava.converters.ConversionException ex) {
			ex.printStackTrace();
			throw new EJBException(XavaResources.getString("generator.conversion_error", "DateFrom", "Ranges", "java.util.Date"));
		}
	}
	
	/**
	 * @ejb:interface-method
	 */
	public void setDateFrom(java.util.Date newDateFrom) {
		try { 
			this.modified = true; 
			set_DateFrom((java.sql.Date) getDateFromConverter().toDB(newDateFrom));
		}
		catch (org.openxava.converters.ConversionException ex) {
			ex.printStackTrace();
			throw new EJBException(XavaResources.getString("generator.conversion_error", "DateFrom", "Ranges", "java.util.Date"));
		}		
	} 
	private static org.openxava.converters.IConverter numberToConverter;
	private org.openxava.converters.IConverter getNumberToConverter() {
		if (numberToConverter == null) {
			try {
				numberToConverter = (org.openxava.converters.IConverter) 
					getMetaModel().getMapping().getConverter("numberTo");
			}
			catch (Exception ex) {
				ex.printStackTrace();
				throw new EJBException(XavaResources.getString("generator.create_converter_error", "numberTo"));
			}
			
		}	
		return numberToConverter;
	} 
	/**	 
	 * @ejb:persistent-field
	 * 
	 * @jboss:column-name "NUMBERTO"
	 */
	public abstract java.lang.Integer get_NumberTo();
	public abstract void set_NumberTo(java.lang.Integer newNumberTo); 	
	
	/**
	 * @ejb.value-object match="persistentCalculatedAndAggregate"
	 * @ejb:interface-method
	 */
	public int getNumberTo() {
		try {
			return ((Integer) getNumberToConverter().toJava(get_NumberTo())).intValue();
		}
		catch (org.openxava.converters.ConversionException ex) {
			ex.printStackTrace();
			throw new EJBException(XavaResources.getString("generator.conversion_error", "NumberTo", "Ranges", "int"));
		}
	}
	
	/**
	 * @ejb:interface-method
	 */
	public void setNumberTo(int newNumberTo) {
		try { 
			this.modified = true; 
			set_NumberTo((java.lang.Integer) getNumberToConverter().toDB(new Integer(newNumberTo)));
		}
		catch (org.openxava.converters.ConversionException ex) {
			ex.printStackTrace();
			throw new EJBException(XavaResources.getString("generator.conversion_error", "NumberTo", "Ranges", "int"));
		}		
	} 
	private static org.openxava.converters.IConverter dateToConverter;
	private org.openxava.converters.IConverter getDateToConverter() {
		if (dateToConverter == null) {
			try {
				dateToConverter = (org.openxava.converters.IConverter) 
					getMetaModel().getMapping().getConverter("dateTo");
			}
			catch (Exception ex) {
				ex.printStackTrace();
				throw new EJBException(XavaResources.getString("generator.create_converter_error", "dateTo"));
			}
			
		}	
		return dateToConverter;
	} 
	/**	 
	 * @ejb:persistent-field
	 * 
	 * @jboss:column-name "DATETO"
	 */
	public abstract java.sql.Date get_DateTo();
	public abstract void set_DateTo(java.sql.Date newDateTo); 	
	
	/**
	 * @ejb.value-object match="persistentCalculatedAndAggregate"
	 * @ejb:interface-method
	 */
	public java.util.Date getDateTo() {
		try {
			return (java.util.Date) getDateToConverter().toJava(get_DateTo());
		}
		catch (org.openxava.converters.ConversionException ex) {
			ex.printStackTrace();
			throw new EJBException(XavaResources.getString("generator.conversion_error", "DateTo", "Ranges", "java.util.Date"));
		}
	}
	
	/**
	 * @ejb:interface-method
	 */
	public void setDateTo(java.util.Date newDateTo) {
		try { 
			this.modified = true; 
			set_DateTo((java.sql.Date) getDateToConverter().toDB(newDateTo));
		}
		catch (org.openxava.converters.ConversionException ex) {
			ex.printStackTrace();
			throw new EJBException(XavaResources.getString("generator.conversion_error", "DateTo", "Ranges", "java.util.Date"));
		}		
	} 

	// Colecciones/Collections		

	// References/Referencias 

	// Methods/Metodos 

	private static MetaModel metaModel;
	public MetaModel getMetaModel() throws XavaException {
		if (metaModel == null) {
			metaModel = MetaComponent.get("Ranges").getMetaEntity(); 	
		}
		return metaModel;
	}
	
	
	/**
	 * @ejb:interface-method
	 */	
	public abstract org.openxava.test.model.RangesData getData();		
	
	/**
	 * @ejb:interface-method
	 */		
	public abstract void setData(org.openxava.test.model.RangesData data);
	
	/**
	 * @ejb:interface-method
	 */	
	public abstract org.openxava.test.model.RangesValue getRangesValue();		
	
	/**
	 * @ejb:interface-method
	 */		
	public abstract void setRangesValue(org.openxava.test.model.RangesValue value);
	
	public void setEntityContext(javax.ejb.EntityContext ctx) {
		super.setEntityContext(ctx);
	}
	public void unsetEntityContext() {
		super.unsetEntityContext();
	} 

	private void initMembers() { 
		setOid(null); 
		setType(0); 
		setNumberFrom(0); 
		setNumberTo(0); 
		setDateFrom(null); 
		setDateTo(null); 	
	} 		
}